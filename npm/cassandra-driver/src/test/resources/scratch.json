{ Client:
  { [Function: Client]
  super_:
  { [Function: EventEmitter]
  EventEmitter: [Circular],
  usingDomains: false,
  defaultMaxListeners: [Getter/Setter],
  init: [Function],
  listenerCount: [Function] } },
  ExecutionProfile: [Function: ExecutionProfile],
  types:
  { opcodes:
  { error: 0,
  startup: 1,
  ready: 2,
  authenticate: 3,
  credentials: 4,
  options: 5,
  supported: 6,
  query: 7,
  result: 8,
  prepare: 9,
  execute: 10,
  register: 11,
  event: 12,
  batch: 13,
  authChallenge: 14,
  authResponse: 15,
  authSuccess: 16,
  isInRange: [Function: isInRange] },
  consistencies:
  { any: 0,
  one: 1,
  two: 2,
  three: 3,
  quorum: 4,
  all: 5,
  localQuorum: 6,
  eachQuorum: 7,
  serial: 8,
  localSerial: 9,
  localOne: 10 },
  dataTypes:
  { custom: 0,
  ascii: 1,
  bigint: 2,
  blob: 3,
  boolean: 4,
  counter: 5,
  decimal: 6,
  double: 7,
  float: 8,
  int: 9,
  text: 10,
  timestamp: 11,
  uuid: 12,
  varchar: 13,
  varint: 14,
  timeuuid: 15,
  inet: 16,
  date: 17,
  time: 18,
  smallint: 19,
  tinyint: 20,
  list: 32,
  map: 33,
  set: 34,
  udt: 48,
  tuple: 49,
  getByName: [Function: getByName] },
  getDataTypeNameByCode: [Function: getDataTypeNameByCode],
  distance: { local: 0, remote: 1, ignored: 2 },
  frameFlags: { compression: 1, tracing: 2, customPayload: 4, warning: 8 },
  protocolEvents:
  { topologyChange: 'TOPOLOGY_CHANGE',
  statusChange: 'STATUS_CHANGE',
  schemaChange: 'SCHEMA_CHANGE' },
  responseErrorCodes:
  { serverError: 0,
  protocolError: 10,
  badCredentials: 256,
  unavailableException: 4096,
  overloaded: 4097,
  isBootstrapping: 4098,
  truncateError: 4099,
  writeTimeout: 4352,
  readTimeout: 4608,
  readFailure: 4864,
  functionFailure: 5120,
  writeFailure: 5376,
  syntaxError: 8192,
  unauthorized: 8448,
  invalid: 8704,
  configError: 8960,
  alreadyExists: 9216,
  unprepared: 9472 },
  resultKind:
  { voidResult: 1,
  rows: 2,
  setKeyspace: 3,
  prepared: 4,
  schemaChange: 5 },
  timeuuid: [Function: timeuuid],
  uuid: [Function: uuid],
  BigDecimal:
  { [Function: BigDecimal]
  fromBuffer: [Function],
  toBuffer: [Function],
  fromString: [Function],
  fromNumber: [Function] },
  FrameHeader:
  { [Function: FrameHeader]
  size: [Function],
  getProtocolVersion: [Function],
  fromBuffer: [Function] },
  InetAddress: { [Function: InetAddress] fromString: [Function] },
  Integer:
  { [Function: Integer]
  IntCache_: [Object],
  fromInt: [Function],
  fromNumber: [Function],
  fromBits: [Function],
  fromString: [Function],
  fromBuffer: [Function],
  toBuffer: [Function],
  TWO_PWR_32_DBL_: 4294967296,
  ZERO: Integer: 0,
  ONE: Integer: 1,
  TWO_PWR_24_: Integer: 16777216,
  carry16_: [Function] },
  LocalDate:
  { [Function: LocalDate]
  now: [Function],
  utcNow: [Function],
  fromDate: [Function],
  fromString: [Function],
  fromBuffer: [Function] },
  LocalTime:
  { [Function: LocalTime]
  fromString: [Function],
  now: [Function],
  fromDate: [Function],
  fromMilliseconds: [Function],
  fromBuffer: [Function] },
  Long:
  { [Function: Long]
  isLong: [Function: isLong],
  fromInt: [Function: fromInt],
  fromNumber: [Function: fromNumber],
  fromBits: [Function: fromBits],
  fromString: [Function: fromString],
  fromValue: [Function: fromValue],
  ZERO: Long: 0,
  UZERO: Long: 0,
  ONE: Long: 1,
  UONE: Long: 1,
  NEG_ONE: Long: -1,
  MAX_VALUE: Long: 9223372036854775807,
  MAX_UNSIGNED_VALUE: Long: 18446744073709551615,
  MIN_VALUE: Long: -9223372036854775808,
  eq: [Function: equals],
  neq: [Function: notEquals],
  fromBuffer: [Function],
  toBuffer: [Function] },
  ResultSet: [Function: ResultSet],
  ResultStream: { [Function: ResultStream] super_: [Object] },
  Row: [Function: Row],
  DriverError: { [Function: DriverError] super_: [Object] },
  TimeoutError: { [Function: TimeoutError] super_: [Object] },
  TimeUuid:
  { [Function: TimeUuid]
  super_: [Object],
  fromDate: [Function],
  fromString: [Function],
  min: [Function],
  max: [Function],
  now: [Function] },
  Tuple: { [Function: Tuple] fromArray: [Function] },
  Uuid: { [Function: Uuid] fromString: [Function], random: [Function] },
  unset: { unset: true },
  generateTimestamp: [Function: generateTimestamp] },
  errors:
  { ArgumentError: { [Function: ArgumentError] super_: [Object] },
  AuthenticationError: { [Function: AuthenticationError] super_: [Object] },
  DriverError: { [Function: DriverError] super_: [Object] },
  OperationTimedOutError: { [Function: OperationTimedOutError] super_: [Object] },
  DriverInternalError: { [Function: DriverInternalError] super_: [Object] },
  NoHostAvailableError: { [Function: NoHostAvailableError] super_: [Object] },
  NotSupportedError: { [Function: NotSupportedError] super_: [Object] },
  ResponseError: { [Function: ResponseError] super_: [Object] } },
  policies:
  { addressResolution:
  { AddressTranslator: [Function: AddressTranslator],
  EC2MultiRegionTranslator: [Object] },
  loadBalancing:
  { DCAwareRoundRobinPolicy: [Object],
  LoadBalancingPolicy: [Function: LoadBalancingPolicy],
  RoundRobinPolicy: [Object],
  TokenAwarePolicy: [Object],
  WhiteListPolicy: [Object] },
  reconnection:
  { ReconnectionPolicy: [Function: ReconnectionPolicy],
  ConstantReconnectionPolicy: [Object],
  ExponentialReconnectionPolicy: [Object] },
  retry: { RetryPolicy: [Object] },
  defaultAddressTranslator: [Function],
  defaultLoadBalancingPolicy: [Function],
  defaultRetryPolicy: [Function],
  defaultReconnectionPolicy: [Function] },
  auth:
  { AuthProvider: [Function: AuthProvider],
  Authenticator: [Function: Authenticator],
  PlainTextAuthProvider: { [Function: PlainTextAuthProvider] super_: [Function: AuthProvider] } },
  metadata: { Metadata: [Function: Metadata] },
  Encoder: { [Function: Encoder] guessDataType: [Function] },
  defaultOptions: [Function],
  version: '3.1.4'
}
